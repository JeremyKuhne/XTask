using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using XTask.Utility;

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle("xtask")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("xtask")]
[assembly: AssemblyCopyright("Copyright © 2015")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]

[assembly: InternalsVisibleTo("Tests, PublicKey=0024000004800000940000000602000000240000525341310004000001000100a3e9dd22b4cc2c5d259c8b4253c31d3bf0c5bdc25becf837b1b3270e1df703ab0555323bbf7634a32b833d3960c9024e98ba1281ba4c2f8c11ee899dc12f320fa7b15fe498cdcfbbd91161d36f90237d744a5aaf7a0799b473610260946218ce13f1efb7894630aa80b12963e925f714b4119dd7764020288710a2f9981ecda9")]

#if NETFRAMEWORK
[assembly: System.Runtime.Versioning.SupportedOSPlatform("windows10.0.17763.0")]
#endif

// Setting ComVisible to false makes the types in this assembly not visible 
// to COM components.  If you need to access a type in this assembly from 
// COM, set the ComVisible attribute to true on that type.
[assembly: ComVisible(false)]

// The following GUID is for the ID of the typelib if this project is exposed to COM
[assembly: Guid("D0C1A2EE-2799-4A9A-A750-6EB973E84A1F")]

[assembly: AssemblyVersion(AssemblyInfo.AssemblyVersionString)]
[assembly: AssemblyFileVersion(AssemblyInfo.AssemblyFileVersionString)]

internal static class AssemblyInfo
{
    // Versions are Major.Minor.Build.Revision
    // Max version component value is 65534 (UInt16.MaxValue - 1)
    //
    // A usable scheme for Build is
    //  YMMDD
    //  (Y)ear of development for major/minor: 1 is first year
    //  (MM)onth of build
    //  (DD)ay of build
    //
    // A usable scheme for Revision is
    //  BHHMM
    //  (B)ranch id, or 1
    //  (HH)our of the day
    //  (MM)inute of the day
    //
    // Assembly versions shouldn't get a Build/Revision (*file* versions should) to
    // allow client assemblies to bind against updated builds. Change the version when
    // you make breaking changes to public interfaces.

    public const int MajorVersion = 0;
    public const int MinorVersion = 9;

    public const string MajorMinorVersionString = "0.9";
    public const string YearOfDevelopmentString = "1";
    public const string BranchIdString = "1";


    public const string AssemblyVersionString = MajorMinorVersionString + ".0.0";
    public const string AssemblyFileVersionString = MajorMinorVersionString
        + "." + YearOfDevelopmentString + AutoGeneratedConstants.Strings.CurrentTwoDigitMonth + AutoGeneratedConstants.Strings.CurrentTwoDigitDayOfMonth
        + "." + BranchIdString + AutoGeneratedConstants.Strings.CurrentTwoDigitHour + AutoGeneratedConstants.Strings.CurrentTwoDigitMinute;
}

#if NETFRAMEWORK

namespace System.Runtime.Versioning
{
    [AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Class | AttributeTargets.Constructor
        | AttributeTargets.Enum | AttributeTargets.Event | AttributeTargets.Field | AttributeTargets.Interface
        | AttributeTargets.Method | AttributeTargets.Module | AttributeTargets.Property | AttributeTargets.Struct,
        AllowMultiple = true, Inherited = false)]
    internal sealed class SupportedOSPlatformAttribute : OSPlatformAttribute
    {
        public SupportedOSPlatformAttribute(string platformName) : base(platformName)
        {
        }
    }

    [AttributeUsage(AttributeTargets.Assembly | AttributeTargets.Class | AttributeTargets.Constructor
        | AttributeTargets.Enum | AttributeTargets.Event | AttributeTargets.Field | AttributeTargets.Interface
        | AttributeTargets.Method | AttributeTargets.Module | AttributeTargets.Property | AttributeTargets.Struct,
        AllowMultiple = true, Inherited = false)]
    internal abstract class OSPlatformAttribute : Attribute
    {
        private protected OSPlatformAttribute(string platformName) => PlatformName = platformName;
        public string PlatformName { get; }
    }
}
#endif
